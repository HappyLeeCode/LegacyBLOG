<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++基础入门（二）——数据类型</title>
      <link href="/2023/06/06/CPP2/"/>
      <url>/2023/06/06/CPP2/</url>
      
        <content type="html"><![CDATA[<h1 id="C-基础入门（二）"><a href="#C-基础入门（二）" class="headerlink" title="C++基础入门（二）"></a>C++基础入门（二）</h1><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2 数据类型"></a>2 数据类型</h2><p>C++规定在创建一个变量或者常量时，必须要指定出相应的数据类型，否则无法给变量分配内存</p><h3 id="2-1-整型"><a href="#2-1-整型" class="headerlink" title="2.1 整型"></a>2.1 整型</h3><p><strong>作用</strong>：整型变量表示的是&#x3D;&#x3D;整数类型&#x3D;&#x3D;的数据</p><p>C++中能够表示整型的类型有以下几种方式，<strong>区别在于所占内存空间不同</strong>：</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th>取值范围</th></tr></thead><tbody><tr><td>short(短整型)</td><td>2字节</td><td>(-2^15 ~ 2^15-1)</td></tr><tr><td>int(整型)</td><td>4字节</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long(长整形)</td><td>Windows为4字节，Linux为4字节(32位)，8字节(64位)</td><td>(-2^31 ~ 2^31-1)</td></tr><tr><td>long long(长长整形)</td><td>8字节</td><td>(-2^63 ~ 2^63-1)</td></tr></tbody></table><h3 id="2-2-sizeof关键字"><a href="#2-2-sizeof关键字" class="headerlink" title="2.2 sizeof关键字"></a>2.2 sizeof关键字</h3><p><strong>作用：</strong>利用sizeof关键字可以&#x3D;&#x3D;统计数据类型所占内存大小&#x3D;&#x3D;</p><p><strong>语法：</strong> <code>sizeof( 数据类型 / 变量)</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;long long 类型所占内存空间为： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">long</span> <span class="type">long</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>整型结论</strong>：&#x3D;&#x3D;short &lt; int &lt;&#x3D; long &lt;&#x3D; long long&#x3D;&#x3D;</p></blockquote><h3 id="2-3-实型（浮点型）"><a href="#2-3-实型（浮点型）" class="headerlink" title="2.3 实型（浮点型）"></a>2.3 实型（浮点型）</h3><p><strong>作用</strong>：用于&#x3D;&#x3D;表示小数&#x3D;&#x3D;</p><p>浮点型变量分为两种：</p><ol><li>单精度float </li><li>双精度double</li></ol><p>两者的<strong>区别</strong>在于表示的有效数字范围不同。</p><table><thead><tr><th><strong>数据类型</strong></th><th><strong>占用空间</strong></th><th><strong>有效数字范围</strong></th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>7位有效数字</td></tr><tr><td>double</td><td>8字节</td><td>15～16位有效数字</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; d1&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;float  sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;double sizeof = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//科学计数法</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>; <span class="comment">// 3 * 10 ^ 2 </span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;  <span class="comment">// 3 * 0.1 ^ 2</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-4-字符型"><a href="#2-4-字符型" class="headerlink" title="2.4 字符型"></a>2.4 字符型</h3><p><strong>作用：</strong>字符型变量用于显示单个字符</p><p><strong>语法：</strong><code>char ch = &#39;a&#39;;</code></p><blockquote><p>注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号</p></blockquote><blockquote><p>注意2：单引号内只能有一个字符，不可以是字符串</p></blockquote><ul><li>C和C++中字符型变量只占用&#x3D;&#x3D;1个字节&#x3D;&#x3D;。</li><li>字符型变量并不是把字符本身放到内存中存储，而是将对应的ASCII编码放入到存储单元</li></ul><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">char</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ch = &quot;abcde&quot;; //错误，不可以用双引号</span></span><br><span class="line"><span class="comment">//ch = &#x27;abcde&#x27;; //错误，单引号内只能引用一个字符</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)ch &lt;&lt; endl;  <span class="comment">//查看字符a对应的ASCII码</span></span><br><span class="line">ch = <span class="number">97</span>; <span class="comment">//可以直接用ASCII给字符型变量赋值</span></span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ASCII码表格：</p><table><thead><tr><th><strong>ASCII</strong>值</th><th><strong>控制字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th><th><strong>ASCII</strong>值</th><th><strong>字符</strong></th></tr></thead><tbody><tr><td>0</td><td>NUT</td><td>32</td><td>(space)</td><td>64</td><td>@</td><td>96</td><td>、</td></tr><tr><td>1</td><td>SOH</td><td>33</td><td>!</td><td>65</td><td>A</td><td>97</td><td>a</td></tr><tr><td>2</td><td>STX</td><td>34</td><td>“</td><td>66</td><td>B</td><td>98</td><td>b</td></tr><tr><td>3</td><td>ETX</td><td>35</td><td>#</td><td>67</td><td>C</td><td>99</td><td>c</td></tr><tr><td>4</td><td>EOT</td><td>36</td><td>$</td><td>68</td><td>D</td><td>100</td><td>d</td></tr><tr><td>5</td><td>ENQ</td><td>37</td><td>%</td><td>69</td><td>E</td><td>101</td><td>e</td></tr><tr><td>6</td><td>ACK</td><td>38</td><td>&amp;</td><td>70</td><td>F</td><td>102</td><td>f</td></tr><tr><td>7</td><td>BEL</td><td>39</td><td>,</td><td>71</td><td>G</td><td>103</td><td>g</td></tr><tr><td>8</td><td>BS</td><td>40</td><td>(</td><td>72</td><td>H</td><td>104</td><td>h</td></tr><tr><td>9</td><td>HT</td><td>41</td><td>)</td><td>73</td><td>I</td><td>105</td><td>i</td></tr><tr><td>10</td><td>LF</td><td>42</td><td>*</td><td>74</td><td>J</td><td>106</td><td>j</td></tr><tr><td>11</td><td>VT</td><td>43</td><td>+</td><td>75</td><td>K</td><td>107</td><td>k</td></tr><tr><td>12</td><td>FF</td><td>44</td><td>,</td><td>76</td><td>L</td><td>108</td><td>l</td></tr><tr><td>13</td><td>CR</td><td>45</td><td>-</td><td>77</td><td>M</td><td>109</td><td>m</td></tr><tr><td>14</td><td>SO</td><td>46</td><td>.</td><td>78</td><td>N</td><td>110</td><td>n</td></tr><tr><td>15</td><td>SI</td><td>47</td><td>&#x2F;</td><td>79</td><td>O</td><td>111</td><td>o</td></tr><tr><td>16</td><td>DLE</td><td>48</td><td>0</td><td>80</td><td>P</td><td>112</td><td>p</td></tr><tr><td>17</td><td>DCI</td><td>49</td><td>1</td><td>81</td><td>Q</td><td>113</td><td>q</td></tr><tr><td>18</td><td>DC2</td><td>50</td><td>2</td><td>82</td><td>R</td><td>114</td><td>r</td></tr><tr><td>19</td><td>DC3</td><td>51</td><td>3</td><td>83</td><td>S</td><td>115</td><td>s</td></tr><tr><td>20</td><td>DC4</td><td>52</td><td>4</td><td>84</td><td>T</td><td>116</td><td>t</td></tr><tr><td>21</td><td>NAK</td><td>53</td><td>5</td><td>85</td><td>U</td><td>117</td><td>u</td></tr><tr><td>22</td><td>SYN</td><td>54</td><td>6</td><td>86</td><td>V</td><td>118</td><td>v</td></tr><tr><td>23</td><td>TB</td><td>55</td><td>7</td><td>87</td><td>W</td><td>119</td><td>w</td></tr><tr><td>24</td><td>CAN</td><td>56</td><td>8</td><td>88</td><td>X</td><td>120</td><td>x</td></tr><tr><td>25</td><td>EM</td><td>57</td><td>9</td><td>89</td><td>Y</td><td>121</td><td>y</td></tr><tr><td>26</td><td>SUB</td><td>58</td><td>:</td><td>90</td><td>Z</td><td>122</td><td>z</td></tr><tr><td>27</td><td>ESC</td><td>59</td><td>;</td><td>91</td><td>[</td><td>123</td><td>{</td></tr><tr><td>28</td><td>FS</td><td>60</td><td>&lt;</td><td>92</td><td>&#x2F;</td><td>124</td><td>|</td></tr><tr><td>29</td><td>GS</td><td>61</td><td>&#x3D;</td><td>93</td><td>]</td><td>125</td><td>}</td></tr><tr><td>30</td><td>RS</td><td>62</td><td>&gt;</td><td>94</td><td>^</td><td>126</td><td>&#96;</td></tr><tr><td>31</td><td>US</td><td>63</td><td>?</td><td>95</td><td>_</td><td>127</td><td>DEL</td></tr></tbody></table><p>ASCII 码大致由以下<strong>两部分组</strong>成：</p><ul><li>ASCII 非打印控制字符： ASCII 表上的数字 <strong>0-31</strong> 分配给了控制字符，用于控制像打印机等一些外围设备。</li><li>ASCII 打印字符：数字 <strong>32-126</strong> 分配给了能在键盘上找到的字符，当查看或打印文档时就会出现。</li></ul><h3 id="2-5-转义字符"><a href="#2-5-转义字符" class="headerlink" title="2.5 转义字符"></a>2.5 转义字符</h3><p><strong>作用：</strong>用于表示一些&#x3D;&#x3D;不能显示出来的ASCII字符&#x3D;&#x3D;</p><p>现阶段我们常用的转义字符有：<code> \n  \\  \t</code></p><table><thead><tr><th><strong>转义字符</strong></th><th><strong>含义</strong></th><th><strong>ASCII</strong>码值（十进制）</th></tr></thead><tbody><tr><td>\a</td><td>警报</td><td>007</td></tr><tr><td>\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td><strong>\n</strong></td><td><strong>换行(LF) ，将当前位置移到下一行开头</strong></td><td><strong>010</strong></td></tr><tr><td>\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td><strong>\t</strong></td><td><strong>水平制表(HT)  （跳到下一个TAB位置）</strong></td><td><strong>009</strong></td></tr><tr><td>\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td><strong>\\</strong></td><td><strong>代表一个反斜线字符”&quot;</strong></td><td><strong>092</strong></td></tr><tr><td>&#39;</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>&quot;</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\0</td><td>数字0</td><td>000</td></tr><tr><td>\ddd</td><td>8进制转义字符，d范围0~7</td><td>3位8进制</td></tr><tr><td>\xhh</td><td>16进制转义字符，h范围0<del>9，a</del>f，A~F</td><td>3位16进制</td></tr></tbody></table><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\tHello&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-字符串型"><a href="#2-6-字符串型" class="headerlink" title="2.6 字符串型"></a>2.6 字符串型</h3><p><strong>作用</strong>：用于表示一串字符</p><p><strong>两种风格</strong></p><ol><li><p><strong>C风格字符串</strong>： <code>char 变量名[] = &quot;字符串值&quot;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：C风格的字符串要用双引号括起来</p></blockquote><ol><li><p><strong>C++风格字符串</strong>：  <code>string  变量名 = &quot;字符串值&quot;</code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">string str = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：C++风格字符串，需要加入头文件&#x3D;&#x3D;#include&lt;string&gt;&#x3D;&#x3D;</p></blockquote><h3 id="2-7-布尔类型-bool"><a href="#2-7-布尔类型-bool" class="headerlink" title="2.7 布尔类型 bool"></a>2.7 布尔类型 bool</h3><p><strong>作用：</strong>布尔数据类型代表真或假的值 </p><p>bool类型只有两个值：</p><ul><li>true  — 真（本质是1）</li><li>false — 假（本质是0）</li></ul><p><strong>bool类型占&#x3D;&#x3D;1个字节&#x3D;&#x3D;大小</strong></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl; <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of bool = &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">bool</span>) &lt;&lt; endl; <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-数据的输入"><a href="#2-8-数据的输入" class="headerlink" title="2.8 数据的输入"></a>2.8 数据的输入</h3><p><strong>作用：用于从键盘获取数据</strong></p><p><strong>关键字：</strong>cin</p><p><strong>语法：</strong> <code>cin &gt;&gt; 变量 </code></p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//整型输入</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入整型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型输入</span></span><br><span class="line"><span class="type">double</span> d = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入浮点型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; d;</span><br><span class="line">cout &lt;&lt; d &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符型输入</span></span><br><span class="line"><span class="type">char</span> ch = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">cout &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串型输入</span></span><br><span class="line">string str;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入字符串型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line">cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔类型输入</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入布尔型变量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++基础入门（一）——初识C++</title>
      <link href="/2023/06/06/CPP1/"/>
      <url>/2023/06/06/CPP1/</url>
      
        <content type="html"><![CDATA[<h1 id="C-基础入门（一）"><a href="#C-基础入门（一）" class="headerlink" title="C++基础入门（一）"></a>C++基础入门（一）</h1><h2 id="1-初识C"><a href="#1-初识C" class="headerlink" title="1 初识C++"></a>1 初识C++</h2><h3 id="1-1-第一个C-程序"><a href="#1-1-第一个C-程序" class="headerlink" title="1.1  第一个C++程序"></a>1.1  第一个C++程序</h3><p>编写一个C++程序总共分为4个步骤</p><ul><li>创建项目</li><li>创建文件</li><li>编写代码</li><li>运行程序</li></ul><h4 id="1-1-1-创建项目"><a href="#1-1-1-创建项目" class="headerlink" title="1.1.1 创建项目"></a>1.1.1 创建项目</h4><p>​Visual Studio是我们用来编写C++程序的主要工具，我们先将它打开</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/assets/1541383178746.png" alt="1541383178746"></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/assets/1541384366413.png" alt="1541384366413"></p><h4 id="1-1-2-创建文件"><a href="#1-1-2-创建文件" class="headerlink" title="1.1.2 创建文件"></a>1.1.2 创建文件</h4><p>右键源文件，选择添加-&gt;新建项</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/assets/1541383817248.png" alt="1541383817248"></p><p>给C++文件起个名称，然后点击添加即可。</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/assets/1541384140042.png" alt="1541384140042"></p><h4 id="1-1-3-编写代码"><a href="#1-1-3-编写代码" class="headerlink" title="1.1.3 编写代码"></a>1.1.3 编写代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-4-运行程序"><a href="#1-1-4-运行程序" class="headerlink" title="1.1.4 运行程序"></a>1.1.4 运行程序</h4><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/assets/1541384818688.png" alt="1541384818688"></p><h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p><strong>作用</strong>：在代码中加一些说明和解释，方便自己或其他程序员程序员阅读代码</p><p><strong>两种格式</strong></p><ol><li><strong>单行注释</strong>：<code>// 描述信息</code> <ul><li>通常放在一行代码的上方，或者一条语句的末尾，&#x3D;&#x3D;对该行代码说明&#x3D;&#x3D;</li></ul></li><li><strong>多行注释</strong>： <code>/* 描述信息 */</code><ul><li>通常放在一段代码的上方，&#x3D;&#x3D;对该段代码做整体说明&#x3D;&#x3D;</li></ul></li></ol><blockquote><p>提示：编译器在编译代码时，会忽略注释的内容</p></blockquote><h3 id="1-3-变量"><a href="#1-3-变量" class="headerlink" title="1.3 变量"></a>1.3 变量</h3><p><strong>作用</strong>：给一段指定的内存空间起名，方便操作这段内存</p><p><strong>语法</strong>：<code>数据类型 变量名 = 初始值;</code></p><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//变量的定义</span></span><br><span class="line"><span class="comment">//语法：数据类型  变量名 = 初始值</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：C++在创建变量时，必须给变量一个初始值，否则会报错</p></blockquote><h3 id="1-4-常量"><a href="#1-4-常量" class="headerlink" title="1.4  常量"></a>1.4  常量</h3><p><strong>作用</strong>：用于记录程序中不可更改的数据</p><p>C++定义常量两种方式</p><ol><li><p><strong>#define</strong> 宏常量： <code>#define 常量名 常量值</code></p><ul><li>&#x3D;&#x3D;通常在文件上方定义&#x3D;&#x3D;，表示一个常量</li></ul></li><li><p><strong>const</strong>修饰的变量 <code>const 数据类型 常量名 = 常量值</code></p><ul><li>&#x3D;&#x3D;通常在变量定义前加关键字const&#x3D;&#x3D;，修饰该变量为常量，不可修改</li></ul></li></ol><p><strong>示例：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、宏常量</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一周里总共有 &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; 天&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//day = 8;  //报错，宏常量不可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、const修饰变量</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一年里总共有 &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; 个月份&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//month = 24; //报错，常量是不可以修改的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-关键字"><a href="#1-5-关键字" class="headerlink" title="1.5 关键字"></a>1.5 关键字</h3><p><strong>作用：</strong>关键字是C++中预先保留的单词（标识符）</p><ul><li><strong>在定义变量或者常量时候，不要用关键字</strong></li></ul><p>C++关键字如下：</p><table><thead><tr><th>asm</th><th>do</th><th>if</th><th>return</th><th>typedef</th></tr></thead><tbody><tr><td>auto</td><td>double</td><td>inline</td><td>short</td><td>typeid</td></tr><tr><td>bool</td><td>dynamic_cast</td><td>int</td><td>signed</td><td>typename</td></tr><tr><td>break</td><td>else</td><td>long</td><td>sizeof</td><td>union</td></tr><tr><td>case</td><td>enum</td><td>mutable</td><td>static</td><td>unsigned</td></tr><tr><td>catch</td><td>explicit</td><td>namespace</td><td>static_cast</td><td>using</td></tr><tr><td>char</td><td>export</td><td>new</td><td>struct</td><td>virtual</td></tr><tr><td>class</td><td>extern</td><td>operator</td><td>switch</td><td>void</td></tr><tr><td>const</td><td>false</td><td>private</td><td>template</td><td>volatile</td></tr><tr><td>const_cast</td><td>float</td><td>protected</td><td>this</td><td>wchar_t</td></tr><tr><td>continue</td><td>for</td><td>public</td><td>throw</td><td>while</td></tr><tr><td>default</td><td>friend</td><td>register</td><td>true</td><td></td></tr><tr><td>delete</td><td>goto</td><td>reinterpret_cast</td><td>try</td><td></td></tr></tbody></table><p><code>提示：在给变量或者常量起名称时候，不要用C++得关键字，否则会产生歧义。</code></p><h3 id="1-6-标识符命名规则"><a href="#1-6-标识符命名规则" class="headerlink" title="1.6 标识符命名规则"></a>1.6 标识符命名规则</h3><p><strong>作用</strong>：C++规定给标识符（变量、常量）命名时，有一套自己的规则</p><ul><li>标识符不能是关键字</li><li>标识符只能由字母、数字、下划线组成</li><li>第一个字符必须为字母或下划线</li><li>标识符中字母区分大小写</li></ul><blockquote><p>建议：给标识符命名时，争取做到见名知意的效果，方便自己和他人的阅读</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> C++程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信号与系统实验报告3-4</title>
      <link href="/2023/05/29/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A3-4/"/>
      <url>/2023/05/29/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A3-4/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>注意：</strong></p><ul><li><p>请使用<strong>电脑端</strong>访问此页面，手机暂时无法正常显示PDF文档</p></li><li><p>本部分的实验报告适用于<strong>电子信息工程</strong>专业，其他专业仅供参考</p></li><li><p>本实验中的程序运行环境为<strong>Matlab 2016a</strong>，不同版本下的程序可能有所<strong>差异</strong></p></li><li><p><strong>严禁直接抄袭本报告、复制粘贴改名等学术不端行为</strong></p></li></ul></blockquote><h1 id="信号与系统实验报告3-4"><a href="#信号与系统实验报告3-4" class="headerlink" title="信号与系统实验报告3-4"></a>信号与系统实验报告3-4</h1><hr><p><strong>目录：</strong></p><ol><li><strong>实验三  连续时间LTI系统的频域分析</strong></li><li><strong>实验四  连续时间LTI系统的复频域分析</strong></li><li><strong>《信号与系统》实验小结</strong></li></ol><p>（实验报告中的程序代码，可点击<a href="https://gitee.com/HappyLeeCode/Signals-and-Systems"><strong>这里</strong></a>查看）</p><div class="row">    <embed src="/pdf/信号与系统实验报告3-4.pdf" width="100%" height="550" type="application/pdf"></div><ul><li>请使用<strong>电脑端</strong>访问此页面，手机可能无法正常显示上方PDF文档</li></ul><mark class="hl-label red">严禁直接抄袭本报告、复制粘贴改名等学术不端行为！</mark> ]]></content>
      
      
      <categories>
          
          <category> 计算机仿真 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数电实验5：D/A转换器及其应用</title>
      <link href="/2023/05/21/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C5/"/>
      <url>/2023/05/21/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>温馨提示：</p><p>1.实验步骤2中表格的测量值应近似于理论值。若<strong>误差太大</strong>，排除接线问题后，应考虑为<strong>元器件(uA741)烧毁</strong></p><p>2.实验报告要求2中的图像，<strong>纵坐标轴</strong>需要<strong>反向</strong>（具体根据实验老师的要求和提示）</p></blockquote><h1 id="数电实验5-D-x2F-A转换器及其应用"><a href="#数电实验5-D-x2F-A转换器及其应用" class="headerlink" title="数电实验5 D&#x2F;A转换器及其应用"></a>数电实验5 D&#x2F;A转换器及其应用</h1><h3 id="一、实验表格（理论值）"><a href="#一、实验表格（理论值）" class="headerlink" title="一、实验表格（理论值）"></a>一、实验表格（理论值）</h3><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/D7811C16FA445561EDABC2117771315D.jpg"></p><h3 id="二、实验图像"><a href="#二、实验图像" class="headerlink" title="二、实验图像"></a>二、实验图像</h3><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/28EFBAA4076034C0AAD22E2C90B1D971.jpg"></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/7C8FD47C314079C4F39856A799C7C3EA.jpg"></p><h3 id="三、实验报告要求（问题回答）"><a href="#三、实验报告要求（问题回答）" class="headerlink" title="三、实验报告要求（问题回答）"></a>三、实验报告要求（问题回答）</h3><blockquote><ul><li><p>D&#x2F;A转换器有哪几种类型？</p><ol><li>权电阻网络D&#x2F;A转换器</li><li>倒T形电阻网络D&#x2F;A转换器</li><li>权电流型D&#x2F;A转换器</li><li>电阻串联分压式D&#x2F;A转换器</li></ol></li><li><p>画出步骤 (3) 观测到的波形</p><p>即本文<strong>第二部分</strong>“<strong>实验图像</strong>”所示，<strong>纵坐标轴</strong>需要<strong>反向</strong>（具体根据实验老师的要求和提示）</p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 电路实验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数电实验4：集成定时器555的原理及其应用</title>
      <link href="/2023/05/21/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C4/"/>
      <url>/2023/05/21/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>温馨提示：</p><p>1.本次实验需要完成<strong>示波器的3个图像</strong>，见第二部分“<strong>实验图片</strong>”</p><p>2.实验报告中需要<strong>作图</strong>的部分，见第一部分的第2节“<strong>实验步骤及内容</strong>”</p></blockquote><h1 id="数电实验4-集成定时器555的原理及其应用"><a href="#数电实验4-集成定时器555的原理及其应用" class="headerlink" title="数电实验4 集成定时器555的原理及其应用"></a>数电实验4 集成定时器555的原理及其应用</h1><h3 id="一、实验报告要求"><a href="#一、实验报告要求" class="headerlink" title="一、实验报告要求"></a>一、实验报告要求</h3><h4 id="1-问题回答"><a href="#1-问题回答" class="headerlink" title="1.问题回答"></a>1.问题回答</h4><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230518_200915.jpg"></p><h4 id="2-实验步骤及内容"><a href="#2-实验步骤及内容" class="headerlink" title="2.实验步骤及内容"></a>2.实验步骤及内容</h4><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230518_200943.jpg"></p><h3 id="二、实验图片"><a href="#二、实验图片" class="headerlink" title="二、实验图片"></a>二、实验图片</h3><h4 id="单稳态触发器"><a href="#单稳态触发器" class="headerlink" title="单稳态触发器"></a>单稳态触发器</h4><ul><li>脉冲宽度 Tw&#x3D;56ms</li></ul><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1684645539342.jpg"></p><h4 id="多谐振荡器"><a href="#多谐振荡器" class="headerlink" title="多谐振荡器"></a>多谐振荡器</h4><ul><li>周期 T&#x3D;180ms</li></ul><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1684645539347.jpg"></p><h4 id="施密特触发器"><a href="#施密特触发器" class="headerlink" title="施密特触发器"></a>施密特触发器</h4><ul><li>回差电压 ΔU&#x3D;1.76V</li></ul><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1684645539345.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 电路实验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>信号与系统实验报告1-2</title>
      <link href="/2023/05/21/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A1-2/"/>
      <url>/2023/05/21/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A1-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>注意：</strong></p><ul><li>请使用<strong>电脑端</strong>访问此页面，手机暂时无法正常显示PDF文档</li><li>本部分的实验报告适用于<strong>电子信息工程</strong>专业，其他专业仅供参考</li><li>本实验中的程序运行环境为<strong>Matlab 2016a</strong>，不同版本下的程序可能有所<strong>差异</strong></li><li><strong>严禁直接抄袭本报告、复制粘贴改名等学术不端行为</strong></li></ul></blockquote><h1 id="信号与系统实验报告1-2"><a href="#信号与系统实验报告1-2" class="headerlink" title="信号与系统实验报告1-2"></a>信号与系统实验报告1-2</h1><hr><p><strong>目录：</strong></p><ol><li><strong>实验预习思考题</strong></li><li><strong>实验一   连续时间信号的表示、连续时间LTI系统的时域分析</strong></li><li><strong>实验二   周期信号的傅里叶级数分析</strong></li></ol><p>（实验报告中的程序代码，可点击<a href="https://gitee.com/HappyLeeCode/Signals-and-Systems"><strong>这里</strong></a>查看）</p><div class="row">    <embed src="/pdf/信号与系统实验报告1-2.pdf" width="100%" height="550" type="application/pdf"></div><ul><li>请使用<strong>电脑端</strong>访问此页面，手机可能无法正常显示上方PDF文档</li></ul><mark class="hl-label red">严禁直接抄袭本报告、复制粘贴改名等学术不端行为！</mark> ]]></content>
      
      
      <categories>
          
          <category> 计算机仿真 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数电实验3：集成计数器及其应用</title>
      <link href="/2023/05/04/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C3/"/>
      <url>/2023/05/04/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>温馨提示：如需实验图片和实验报告表格数据，见本文的<strong>第二部分</strong>和<strong>第三部分</strong></p><p>特别感谢：本次实验报告中<strong>第二个问题</strong>的最终答案，是与<strong>小陈同学</strong>交流讨论得到的<img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/flower.png"></p></blockquote><h1 id="数电实验3-集成计数器及其应用"><a href="#数电实验3-集成计数器及其应用" class="headerlink" title="数电实验3 集成计数器及其应用"></a>数电实验3 集成计数器及其应用</h1><h3 id="一、实验报告要求"><a href="#一、实验报告要求" class="headerlink" title="一、实验报告要求"></a>一、实验报告要求</h3><p><img src="https://img.happylee.cn/img/IMG20230505.jpg"></p><h3 id="二、实验图片"><a href="#二、实验图片" class="headerlink" title="二、实验图片"></a>二、实验图片</h3><p><strong>1.译码器CD4511逻辑功能的验证（译码、锁存、消隐、灯测试等）：</strong></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/qq_pic_merged_1683207839369.jpg"></p><p><strong>2.计数器74LS162逻辑功能的验证计数、清除、预置、使能及进位等）：</strong></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/qq_pic_merged_1683207856695.jpg"></p><h3 id="三、实验内容及步骤"><a href="#三、实验内容及步骤" class="headerlink" title="三、实验内容及步骤"></a>三、实验内容及步骤</h3><p><img src="https://img.happylee.cn/img/IMG_20230504_214149.jpg"></p><p><img src="https://img.happylee.cn/img/IMG_20230504_214248.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 电路实验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一款基于Butterfly主题的loading动画</title>
      <link href="/2023/05/03/%E4%B8%80%E6%AC%BE%E5%9F%BA%E4%BA%8EButterfly%E4%B8%BB%E9%A2%98%E7%9A%84loading%E5%8A%A8%E7%94%BB/"/>
      <url>/2023/05/03/%E4%B8%80%E6%AC%BE%E5%9F%BA%E4%BA%8EButterfly%E4%B8%BB%E9%A2%98%E7%9A%84loading%E5%8A%A8%E7%94%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言</strong>：</p><ul><li>在这里首先特别感谢<a href="https://anzhiy.cn/"><strong>安知鱼</strong></a>大佬的贡献！本文改编自安知鱼的一篇教程——<a href="https://anzhiy.cn/posts/52d8.html">Heo同款loading动画</a></li><li>对比上面的安知鱼那篇原文，本文主要新增了关于loading动画下的<strong>百分比加载数字</strong>的效果</li><li>本篇文章仅用于交流学习之用，若有侵权行为，请联系我删除</li></ul></blockquote><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><h2 id="1-Butterfly主题自带页面加载动画-preloader："><a href="#1-Butterfly主题自带页面加载动画-preloader：" class="headerlink" title="1.Butterfly主题自带页面加载动画 preloader："></a>1.Butterfly主题自带页面加载动画 preloader：</h2><p><img src="https://file.crazywong.com/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-preloader.gif"></p><ul><li>关于如何开启页面加载动画的方法，请参照——<a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 安装文档(四) 主题配置-2</a></li></ul><h2 id="2-魔改后的loading加载动画："><a href="#2-魔改后的loading加载动画：" class="headerlink" title="2.魔改后的loading加载动画："></a>2.魔改后的loading加载动画：</h2><blockquote><p>魔改后的加载动画更加简洁，并且上面的头像、背景颜色等支持用户自定义，能够更加切合自己的网站风格</p></blockquote><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/loading.png"></p><h1 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h1><blockquote><p>提示：</p><ul><li><p>本教程适用于Butterfly主题4.5以上版本（实测为4.7.0版本）</p></li><li><p>本文中需要改动的有关文件，我均已整理并打包上传至我的GitHub仓库：<a href="https://github.com/HappyLeeCode/Butterfly-Loading">https://github.com/HappyLeeCode/Butterfly-Loading</a></p></li></ul></blockquote><p>1.修改 <mark class="hl-label default">themes/butterfly/layout/includes/loading/fullpage-loading.pug</mark> </p><blockquote><p>下方的<strong>图片链接</strong>记得<strong>换成自己的</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">- loading_img = theme.preloader.avatar</span><br><span class="line">#loading-box(onclick=&#x27;document.getElementById(&quot;loading-box&quot;).classList.add(&quot;loaded&quot;)&#x27;)</span><br><span class="line">  .loading-bg</span><br><span class="line">    img.loading-img(class=&#x27;nolazyload&#x27; src=loading_img ? url_for(loading_img) : &quot;https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/avatar.webp&quot;)</span><br><span class="line">    .loading-image-dot</span><br><span class="line">    #loading-percentage</span><br><span class="line">      | 0%</span><br><span class="line">script.</span><br><span class="line">  const loadingPercentage = document.getElementById(&quot;loading-percentage&quot;);</span><br><span class="line">  loadingPercentage.style.color = &quot;black&quot;;</span><br><span class="line">  let loadingPercentageTimer = setInterval(function() &#123;</span><br><span class="line">    var progressBar = document.querySelector(&quot;.pace-progress&quot;);</span><br><span class="line">    if (!progressBar) return</span><br><span class="line">    var currentValue = progressBar.getAttribute(&quot;data-progress-text&quot;);</span><br><span class="line">    if (currentValue !== loadingPercentage.textContent) &#123;</span><br><span class="line">      loadingPercentage.textContent = currentValue;</span><br><span class="line">      if (currentValue === &quot;100%&quot;) &#123;</span><br><span class="line">        clearInterval(loadingPercentageTimer);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, 100);</span><br><span class="line">  const preloader = &#123;</span><br><span class="line">    endLoading: () =&gt; &#123;</span><br><span class="line">      document.body.style.overflow = &#x27;auto&#x27;;</span><br><span class="line">      document.getElementById(&#x27;loading-box&#x27;).classList.add(&quot;loaded&quot;)</span><br><span class="line">    &#125;,</span><br><span class="line">    initLoading: () =&gt; &#123;</span><br><span class="line">      document.body.style.overflow = &#x27;&#x27;;</span><br><span class="line">      document.getElementById(&#x27;loading-box&#x27;).classList.remove(&quot;loaded&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  window.addEventListener(&#x27;load&#x27;,()=&gt; &#123; preloader.endLoading() &#125;)</span><br><span class="line"></span><br><span class="line">  if (!&#123;theme.pjax &amp;&amp; theme.pjax.enable&#125;) &#123;</span><br><span class="line">    document.addEventListener(&#x27;pjax:send&#x27;, () =&gt; &#123; preloader.initLoading() &#125;)</span><br><span class="line">    document.addEventListener(&#x27;pjax:complete&#x27;, () =&gt; &#123; preloader.endLoading() &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.修改 <mark class="hl-label default">themes/butterfly/layout/includes/loading/index.pug</mark> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if theme.preloader.source === 1</span><br><span class="line">  include ./fullpage-loading.pug</span><br><span class="line">else if theme.preloader.source === 2</span><br><span class="line">  include ./pace.pug</span><br><span class="line">else</span><br><span class="line">  include ./fullpage-loading.pug</span><br><span class="line">  include ./pace.pug</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.新建<strong>博客根目录</strong>下<mark class="hl-label default">source/css/progress_bar.css</mark>  , 也可以不做这一步,那么最后一步中修改配置文件<mark class="hl-label default">pace_css_url</mark>  这一项就要留空, 这一步其是修改 pace 加载的胶囊 💊 样式用的</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.pace</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  -webkit-user-select: none;</span><br><span class="line">  -moz-user-select: none;</span><br><span class="line">  user-select: none;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">4rem</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#eaecf2</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#e3e8f7</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace-inactive</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span> <span class="selector-class">.pace-progress</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -moz-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -ms-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -o-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  -moz-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  -ms-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  -o-<span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2000</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(-<span class="number">45deg</span>, <span class="number">#ee7752</span>, <span class="number">#e73c7e</span>, <span class="number">#23a6d5</span>, <span class="number">#23d5ab</span>);</span><br><span class="line">  <span class="attribute">animation</span>: gradient <span class="number">1.5s</span> ease infinite;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">200%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pace</span><span class="selector-class">.pace-inactive</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> gradient &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.修改<mark class="hl-label default">themes/butterfly/source/css/_layout/loading.styl</mark>  。</p><blockquote><p>注意：其中**.loading-bg<strong>那一项下的</strong>background**可以自行修改为自己的色值</p><p>（这里其实就是在修改加载背景的颜色，例如我的颜色是浅蓝色：#B0E2FF）</p></blockquote><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;preloader&#x27;</span>)</span><br><span class="line">  <span class="selector-class">.loading-bg</span></span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#B0E2FF</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1001</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transition</span>: .<span class="number">3s</span>;</span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#loading-box</span></span><br><span class="line">    <span class="selector-class">.loading-img</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">margin</span>: auto;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">4px</span> solid <span class="number">#f0f0f2</span>;</span><br><span class="line">      <span class="attribute">animation-duration</span>: .<span class="number">3s</span>;</span><br><span class="line">      <span class="attribute">animation-name</span>: loadingAction;</span><br><span class="line">      <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">      <span class="attribute">animation-direction</span>: alternate;</span><br><span class="line">    <span class="selector-class">.loading-image-dot</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">#6bdf8f</span>;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">6px</span> solid <span class="number">#fff</span>;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">18px</span>, <span class="number">24px</span>);</span><br><span class="line">    <span class="selector-id">#loading-percentage</span></span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">67%</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&quot;「&quot;</span></span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">10px</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&quot;」&quot;</span></span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">10px</span></span><br><span class="line">    &amp;<span class="selector-class">.loaded</span></span><br><span class="line">      <span class="selector-class">.loading-bg</span></span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">z-index</span>: -<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@keyframes</span> loadingAction</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: .<span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.在合适的地方加上<strong>自定义 css</strong>, 其中 background 的 url 即为 loading 的图片地址。</p><p>（不会的同学参考<a href="https://blog.leonus.cn/2022/custom.html"><strong>Hexo 博客添加自定义 css 和 js 文件</strong></a>）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.loading-img</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/avatar.webp</span>) no-repeat center center;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>6.最后一步：修改<strong>主题目录下</strong><mark class="hl-label default">_config.yml</mark> 中preloader选项,。</p><blockquote><p>现在 source: 1为满屏加载，无pace胶囊；source: 2为pace胶囊，无满屏动画；<strong>source: 3是两者都启用</strong>。</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Loading Animation (加載動畫)</span></span><br><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source</span></span><br><span class="line">  <span class="comment"># 1. fullpage-loading</span></span><br><span class="line">  <span class="comment"># 2. pace (progress bar)</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># pace theme (see https://codebyzach.github.io/pace/)</span></span><br><span class="line">  <span class="attr">pace_css_url:</span> <span class="string">/css/progress_bar.css</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="后文"><a href="#后文" class="headerlink" title="后文"></a>后文</h1><p>至此，本篇文章就结束了。码字不易，还请多多支持本站，欢迎您的后续关注！</p><p>另外，如果您有什么问题，或者发现了文中的一些错误，都欢迎您在<strong>下方评论区</strong>留言和我交流、讨论！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站更新公告</title>
      <link href="/2023/05/01/%E7%BD%91%E7%AB%99%E6%9B%B4%E6%96%B0%E5%85%AC%E5%91%8A/"/>
      <url>/2023/05/01/%E7%BD%91%E7%AB%99%E6%9B%B4%E6%96%B0%E5%85%AC%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言</strong>：</p><ul><li><p>经过一个周末的努力，本次博客网站的维护和更新终于完成了！</p></li><li><p><strong>特别鸣谢</strong>：</p><ol><li><p><a href="https://saop.cc/"><strong>Ading阿定</strong></a>，对我网站建设中的答疑解惑</p></li><li><p>我的大学同学，<strong>谢同学</strong>、<strong>王同学</strong>等在网站体验后的反馈与建议</p></li><li><p><a href="https://www.fomal.cc/"><strong>Fomalhaut🥝</strong></a>所编写的系列关于博客网站搭建的教程</p></li><li><p>GitHub上<a href="https://github.com/dmego"><strong>Dmego</strong></a>、<a href="https://github.com/imsyy"><strong>imsyy</strong></a>两位的开源项目</p></li><li><p>本网站所用到的Hexo、butterfly主题、GitHub、Vercel、Twikoo、来必力等提供的服务</p><p><strong>在此，致以诚挚的感谢！</strong></p></li></ol></li><li><p>现在，来看看网站，都有哪些具体的新特色吧！</p></li></ul></blockquote><hr><h1 id="总览："><a href="#总览：" class="headerlink" title="总览："></a>总览：</h1><ol><li>自定义<strong>域名</strong>——<strong>happylee.cn</strong></li><li>新增<strong>个人主页</strong>（一级域名）——<a href="https://www.happylee.cn/">传送门</a></li><li>新增<strong>上网导航页</strong>——<a href="https://hi.happylee.cn/">传送门</a></li><li>新建了博客专用<strong>图床</strong></li><li>部署到<strong>Vercel</strong>，进一步优化网站访问速度</li><li>新增了Twikoo评论系统（现支持Twikoo&#x2F;Livere<strong>双评论</strong>系统）</li></ol><hr><h1 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h1><h2 id="一、自定义域名"><a href="#一、自定义域名" class="headerlink" title="一、自定义域名"></a>一、自定义域名</h2><p><strong>域名</strong>，作为每一个网站的标识，就像我们一个人的名字一样，其重要性可谓是不言而喻的！</p><ul><li>于是这次，我在腾讯云上注册了<strong>happylee.cn</strong>这个域名</li><li>上面这个顶级域名，我分配给了新建的<strong>个人主页</strong></li><li>给博客网站分配的是<strong>blog.happylee.cn</strong>这个二级域名</li></ul><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501220417.png"></p><p>这里我也简述一下自己搭建博客的历程：</p><p>原来本网站是利用GitHub上的pages服务，将本地借助hexo生成的博客网页文件，部署上传到GitHub后，这个pages服务会自动识别这些文件并生成一个xxxx.github.io的链接(其中xxxx为GitHub用户名)。那么之后，我们就可以通过这个xxxx.github.io的链接在浏览器中访问这个博客网站了。</p><blockquote><p> 关于具体搭建博客步骤，感兴趣的同学可以去浏览我的第一篇博客文章</p></blockquote><p>总而言之，去年我就是按这个方法，搭建了最开始的博客网站，就是下面这个：（<a href="https://happyleecode.gitee.io/">点我跳转</a>）</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501212304.png"></p><ul><li>当时技术有限，像什么评论系统，以及一些小的页面都不会弄，而且这个网站还有很多地方没有改过来</li><li><strong>最重要的是——受国内对GitHub的限制，访问这个网站很不稳定，打开网站的速度也很慢</strong></li></ul><p>然后，由于学业，我的博客网站搭建也就告一段落了。。。。。</p><p>不过，今年我又重新开始了博客网站的建设。毕竟搭博客还只是小事，在我看来，最重要的是<strong>学一些技术</strong>，<strong>做一些小项目</strong>，然后<strong>写文章</strong>去记录这些历程，其次才是放在网站上。</p><p>于是，就有了下面这个博客网站了（这次部署到了“国内的GitHub”——Gitee上，并且采用butterfly这个主题）：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501214238.png"></p><p>同时，我将这学期写的<strong>电路实验报告</strong>放在了上面，供同学们参考</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501215340.png"></p><p>这次搭建博客的原理和最开始放到GitHub上是一样的，由于Gitee服务器在国内，所以这次的博客访问更加稳定速度，也更快了。</p><p>但是由于写文章时，难免是要配一些图片的。考虑到网站本地图片加载速度慢的问题，搭建一个专门为博客使用的<a href="https://www.baidu.com/link?url=3KjaYPy1GpVSy5hgZ4K5j7lTJWfu0IOo6-ZZJZBvMUHnJEsXZJrwBi6dHG3hmiDomma7b47_h0dzUbYNjFVtIvgiE7ncEGro6x9OYetzpFu&wd=&eqid=fb569648000035dc00000002644fc7bb"><em>图床</em> - (百度百科)</a>是大势所趋。</p><p>然而，原来采用picgo+vika搭建图床的方案现在行不通了。这次vika图床的失效，综合各种因素，也促使我重新考虑将网站又部署回到了GitHub上。同时，也是借助这次机会，我注册了自己的域名，并也是利用GitHub搭建了自己的图床，网站做成了现在这个样子。</p><h2 id="二、新增个人主页"><a href="#二、新增个人主页" class="headerlink" title="二、新增个人主页"></a>二、新增个人主页</h2><p>既然，有了自己的域名，那么顶级域名<strong>happylee.cn</strong>肯定是用来给自己的个人主页啦——<a href="https://www.happylee.cn/">Lee’s Home</a></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1682950799383.png"></p><p>上面这个页面，采用了GitHub上的一个开源项目——<a href="https://github.com/dmego/home.github.io">https://github.com/dmego/home.github.io</a></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501222607.png"></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501222359.png"></p><h2 id="三、新增上网导航页"><a href="#三、新增上网导航页" class="headerlink" title="三、新增上网导航页"></a>三、新增上网导航页</h2><p>仔细的你，肯定发现我的个人主页中，有一个<strong>导航</strong>这个按钮吧！</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501222952.png"></p><p>点击它，就会打开这么一个页面了：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1682951477856.png"></p><p>实现这个功能的页面，也是来源于GitHub上的一个开源项目——<a href="https://github.com/imsyy/Snavigation">https://github.com/imsyy/Snavigation</a></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501223257.png"></p><blockquote><p> 写到这里，我不禁得好好表示对上面两位大佬的<strong>感谢</strong>，毕竟我<strong>纯纯</strong>是在<strong>白嫖</strong>！！！</p></blockquote><h2 id="四、新建了博客的专用图床"><a href="#四、新建了博客的专用图床" class="headerlink" title="四、新建了博客的专用图床"></a>四、新建了博客的专用图床</h2><p>这部分我觉得没啥好说的：</p><p>主要是跟着这个教程：<a href="https://www.fomal.cc/posts/d7fb1ba1.html">https://www.fomal.cc/posts/d7fb1ba1.html</a></p><p>然后就有了下面一个我的图床，其实就是一个<strong>GitHub仓库</strong>，把图片上传到这里面，就可以拥有图片的链接了。</p><p>（重要的是学习教程中一些有关<strong>添加CDN</strong>，以及在<strong>Vercel上部署</strong>等技巧，使得图床链接访问<strong>更快、更稳定</strong>）</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1682951909415.png"></p><h2 id="五、部署到Vercel，进一步优化网站访问速度"><a href="#五、部署到Vercel，进一步优化网站访问速度" class="headerlink" title="五、部署到Vercel，进一步优化网站访问速度"></a>五、部署到Vercel，进一步优化网站访问速度</h2><ul><li><strong>Vercel的官网地址</strong>：<a href="https://vercel.com/">https://vercel.com/</a></li></ul><p>Vercel 是一个网站托管服务平台，开发者可以将自己的网络应用部署、托管在平台上运行。</p><p><a href="https://link.zhihu.com/?target=https://vercel.com/">Vercel</a><strong>类似于github page</strong>，但远比github page强大，<strong>速度也快得多得多</strong>，而且将Github授权给vercel后，可以达到最优雅的发布体验，只需将代码轻轻一推，项目就<strong>自动更新部署</strong>了。</p><p>更加专业一点地说，vercel 的定位一个是<strong>零配置</strong>的静态资源和<strong>无服务器</strong>云计算（serverless) 部署平台，vercel 的 serverless function 背后用的其实是 AWS 的 lambda，因此可以部署在全球多个地区的 AWS 服务器，利用 vercel 的 Edge network ，可以实现让访客访问到离自己最近的内容，<strong>提高网站速度</strong>。</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501225716.png"></p><p>上面就是我这次网站的所有项目在Vercel上的部署，每个项目我都解析并分配到了一个各自的域名，于是现在就可以更加流畅快速地通过这些域名访问我的个人网站、博客、导航页、图床等。</p><h2 id="六、新增了Twikoo评论系统（现支持Twikoo-x2F-Livere双评论系统）"><a href="#六、新增了Twikoo评论系统（现支持Twikoo-x2F-Livere双评论系统）" class="headerlink" title="六、新增了Twikoo评论系统（现支持Twikoo&#x2F;Livere双评论系统）"></a>六、新增了Twikoo评论系统（现支持Twikoo&#x2F;Livere双评论系统）</h2><p>原来我的博客网站<strong>只支持livere（来必力）</strong>评论系统，读者在评论时需要<strong>登录社交帐号</strong>：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501230501.png"></p><p>然而，在使用过程中我发现：尽管我设置了邮箱提醒系统，但是当别人在博客网站上评论时，我却还是<strong>收不到评论提醒</strong>，就很容易错过一些消息。</p><p>于是，这次我新增了twikoo这个新的评论系统，因此现在就支持这<strong>两种</strong>评论模式，并且twikoo提供的评论系统<strong>不需要登录社交帐号</strong>，只需要填写一个自己给定的<strong>昵称和邮箱</strong>就可以评论：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230501231307.png"></p><p>现在<strong>默认使用的是twikoo</strong>，想要用livere登录社交帐号评论时，只需要点击<strong>上图方框中</strong>那个按钮<strong>切换</strong>就行</p><p>twikoo的好处就在于：<strong>它能够确切地通过邮箱，告诉评论人和博主有关这条评论的回复消息。</strong></p><p>如果你也想采用twikoo评论系统，请查看这篇文档——<a href="https://twikoo.js.org/quick-start.html">https://twikoo.js.org/quick-start.html</a></p><hr><h1 id="后文"><a href="#后文" class="headerlink" title="后文"></a>后文</h1><p>至此，本篇文章就结束了。码字不易，还请多多支持本站，欢迎您的后续关注！</p><p>另外，如果您有什么问题或者发现了网站中的一些错误，以及对网站的一些建议，都欢迎您在<strong>下方评论区</strong>留言和我交流、讨论！</p>]]></content>
      
      
      <categories>
          
          <category> 通知公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Hexo </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Vercel </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023.4.25紧急通知</title>
      <link href="/2023/04/25/%E9%80%9A%E7%9F%A51/"/>
      <url>/2023/04/25/%E9%80%9A%E7%9F%A51/</url>
      
        <content type="html"><![CDATA[<h1 id="2023-4-25-紧急通知"><a href="#2023-4-25-紧急通知" class="headerlink" title="2023 4 25 紧急通知"></a>2023 4 25 紧急通知</h1><ul><li><p>由于本网站中所显示的图片，采用的是基于vika所搭建的图床。<strong>受vika平台的影响，网站中的嵌入图片无法正常加载和显示</strong>。目前已经定位该问题，正在全力进行修复。</p></li><li><p>对于本网站中目前出现的图片显示问题，我决定放弃原来的vika图床，采用新的图床解决方案。</p><blockquote><p>另外，对于同学们有较大需求的“实验与仿真”板块中的图片，我已经临时整理备份，点击<a href="https://vika.cn/share/shrgrDg6BQqABH5YhUdQo"><strong>这里</strong></a>访问。</p></blockquote></li><li><p>除此之外，在本次网站维护中，我还将给网站进行一些页面优化，并会给网站添加和使用自定义域名。同时，我将废弃目前部署到Gitee上的方案，重新部署到GitHub上，并使用CDN加速，确保网站访问的稳定性。</p></li><li><p>本次网站的维护和更新预计将持续<strong>五天</strong>左右，这期间给您带来的不便，我在此深表歉意！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 通知公告 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数电实验2：触发器及其应用</title>
      <link href="/2023/04/22/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C2/"/>
      <url>/2023/04/22/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>温馨提示：需要参考“<strong>实验报告要求</strong>”处理的，请<strong>直接跳转</strong>到本文的<strong>第三部分</strong>即可</p></blockquote><h1 id="数电实验2-触发器及其应用"><a href="#数电实验2-触发器及其应用" class="headerlink" title="数电实验2 触发器及其应用"></a>数电实验2 触发器及其应用</h1><h3 id="一、实验内容及步骤："><a href="#一、实验内容及步骤：" class="headerlink" title="一、实验内容及步骤："></a>一、实验内容及步骤：</h3><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230422_003614.jpg"></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230422_003632.jpg"></p><h3 id="二、实验步骤5的说明："><a href="#二、实验步骤5的说明：" class="headerlink" title="二、实验步骤5的说明："></a>二、实验步骤5的说明：</h3><h5 id="1-理论分析"><a href="#1-理论分析" class="headerlink" title="1.理论分析"></a>1.理论分析</h5><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230422_011844.jpg"></p><h5 id="2-仿真验证"><a href="#2-仿真验证" class="headerlink" title="2.仿真验证"></a>2.仿真验证</h5><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/fzdl.gif"></p><blockquote><p><strong>注意：</strong>上图中001，即数码管显示为“1”这种情况，漏截图了</p><p>​具体的仿真操作，可以参考这篇文章：<a href="https://blog.csdn.net/m0_56830873/article/details/124674719">Multisim实现D触发器模拟异步计数器</a></p></blockquote><h3 id="三、实验报告要求："><a href="#三、实验报告要求：" class="headerlink" title="三、实验报告要求："></a>三、实验报告要求：</h3><h4 id="问题1：说明如何设定JK触发器和D触发器的初始状态"><a href="#问题1：说明如何设定JK触发器和D触发器的初始状态" class="headerlink" title="问题1：说明如何设定JK触发器和D触发器的初始状态"></a><strong>问题1：说明如何设定JK触发器和D触发器的初始状态</strong></h4><blockquote><p><strong>答：</strong></p><p>通过设置触发器的置1端（SD）和置0端（RD），本次实验中均为低电平有效，来设定触发器的初始状态，完成后保持高电平(逻辑开关打到1)。</p><p>具体操作为：先将RD,SD接逻辑开关，开关打到1；</p><p>若要<strong>Qn&#x3D;0</strong>，则RD逻辑开关打到0再打到1；</p><p>若要<strong>Qn&#x3D;1</strong>，则SD逻辑开关打到0再打到1。</p></blockquote><h4 id="问题2：根据表2-2-7测得的数据，分析出该时序电路的逻辑功能。"><a href="#问题2：根据表2-2-7测得的数据，分析出该时序电路的逻辑功能。" class="headerlink" title="问题2：根据表2.2.7测得的数据，分析出该时序电路的逻辑功能。"></a>问题2：根据表2.2.7测得的数据，分析出该时序电路的逻辑功能。</h4><blockquote><p> <strong>答：</strong></p><p>3位异步二进制递增计数器（模8递增计数器）。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 电路实验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>51单片机入门</title>
      <link href="/2023/04/15/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A8/"/>
      <url>/2023/04/15/51%E5%8D%95%E7%89%87%E6%9C%BA%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>写在前面：</p><ul><li><p>当你准备学习单片机知识时，欢迎你开始步入神奇的电子技术世界！</p></li><li><p>本系列文章是我学习单片机开发的路线笔记，并将会持续不定期更新</p></li><li><p>如果你在阅读文章中有任何不懂的问题，或者发现文章中一些错误的地方</p><p>欢迎在下方评论区，与我联系和讨论！</p></li></ul></blockquote><h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>在正式开始了解和接触单片机之前，你<strong>最好</strong>应具备：</p><ul><li><p>学习过<strong>C语言</strong>，掌握C语言中的一些基本语法，有一定的编程基础</p></li><li><p>学习过<strong>模电</strong>和<strong>数电</strong>，或者有一定的相关了解和基础（尤其是数电）</p><p>如果你没有学过模电和数电，也没有关系</p><p>这里推荐一个科普课程：<a href="https://www.bilibili.com/video/BV1EW411u7th/?spm_id_from=333.337.search-card.all.click&vd_source=4391f3e2849f62b9231a5b89eeca0660"><strong>计算机科学速成课</strong></a>（只需要看前10节就行，每节时长只有10分钟左右）</p><p>看完之后，将会对后续单片机的学习有更好的促进作用！</p></li></ul><h1 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h1><h2 id="一、单片机介绍"><a href="#一、单片机介绍" class="headerlink" title="一、单片机介绍"></a>一、单片机介绍</h2><p>•单片机，英文Micro Controller Unit，简称MCU</p><p>•内部集成了CPU、RAM、ROM、定时器、中断系统、通讯接口等一系列电脑的常用硬件功能</p><p>•单片机的任务是信息采集（依靠传感器）、处理（依靠CPU）和硬件设备（例如电机，LED等）的控制</p><p>•单片机跟计算机相比，单片机算是一个袖珍版计算机，一个芯片就能构成完整的计算机系统。但在性能上，与计算机相差甚远，但单片机成本低、体积小、结构简单，在生活和工业控制领域大有所用</p><p>•<strong>同时，学习使用单片机是了解计算机原理与结构的最佳选择</strong></p><h2 id="二、什么是51单片机-x2F-为什么叫51单片机？"><a href="#二、什么是51单片机-x2F-为什么叫51单片机？" class="headerlink" title="二、什么是51单片机&#x2F;为什么叫51单片机？"></a>二、什么是51单片机&#x2F;为什么叫51单片机？</h2><ul><li>51单片机是对兼容<a href="https://baike.baidu.com/item/%E8%8B%B1%E7%89%B9%E5%B0%94/305730?fromModule=lemma_inlink">英特尔</a>8051<a href="https://baike.baidu.com/item/%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/3220297?fromModule=lemma_inlink">指令系统</a>的<a href="https://baike.baidu.com/item/%E5%8D%95%E7%89%87%E6%9C%BA/102396?fromModule=lemma_inlink">单片机</a>的统称。正是因为这个“8051”有个51,所以凡是与“8051”内核一样的单片机都统称为51系列单片机。</li><li>51单片机广泛应用于家用电器、汽车、工业测控、<a href="https://baike.baidu.com/item/%E9%80%9A%E4%BF%A1%E8%AE%BE%E5%A4%87/10476282?fromModule=lemma_inlink">通信设备</a>中。因为51单片机的<a href="https://baike.baidu.com/item/%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/3220297?fromModule=lemma_inlink">指令系统</a>、内部结构相对简单，所以国内许多高校用其进行单片机入门教学。</li></ul><h2 id="三、开发工具"><a href="#三、开发工具" class="headerlink" title="三、开发工具"></a>三、开发工具</h2><ol><li><p>开发软件<strong>Keil5C51</strong>——用于编写单片机程序</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/stm32u5.png"></p></li><li><p>烧录软件<strong>stc-isp</strong>——用于将写好的程序下载到单片机上</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/stm32.png"></p></li><li><p>普中<a href="https://so.csdn.net/so/search?q=51%E5%8D%95%E7%89%87%E6%9C%BA&spm=1001.2101.3001.7020">51单片机</a><strong>开发板</strong></p></li></ol><p>​上面除了有STC89C51芯片(即51单片机)以外，另外在开发板上还集成有数码管、LED灯管、蜂鸣器等模块，方便我们学习单片机时，来调用和实现一些功能。</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/%7DD6%7DPGS%60XT8%7BOM7NO9%7D6D_M.png"></p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/M1RZTV2.png"></p><h2 id="四、推荐教程视频"><a href="#四、推荐教程视频" class="headerlink" title="四、推荐教程视频"></a>四、推荐教程视频</h2><ul><li>B站：<a href="https://www.bilibili.com/video/BV1Mb411e7re/?spm_id_from=333.337.search-card.all.click&vd_source=4391f3e2849f62b9231a5b89eeca0660">江协科技  51单片机入门教程-2020版 程序全程纯手打 从零开始入门</a>（原江科大自化协51单片机教程视频）</li></ul><h2 id="五、后续更新"><a href="#五、后续更新" class="headerlink" title="五、后续更新"></a>五、后续更新</h2><ul><li><p>我会不定期更新自己在学习51单片机过程中的学习笔记和心得体会，并上传相关的实验操作代码和数据。</p></li><li><p>欢迎感兴趣的同学，与我交流学习，我们共同进步！</p></li><li><p>本系列文章未完待续，请关注留意！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 51单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数电实验1：集成逻辑门电路</title>
      <link href="/2023/04/10/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C1/"/>
      <url>/2023/04/10/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%AE%9E%E9%AA%8C1/</url>
      
        <content type="html"><![CDATA[<h1 id="数电实验1-集成逻辑门电路"><a href="#数电实验1-集成逻辑门电路" class="headerlink" title="数电实验1 集成逻辑门电路"></a>数电实验1 集成逻辑门电路</h1><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230419_190808.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 电路实验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决Git同时部署到GitHub和Gitee时，密钥SSH冲突问题</title>
      <link href="/2023/04/05/SSH/"/>
      <url>/2023/04/05/SSH/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>问题描述：</p><ul><li>当我们拥有<strong>多个</strong>git账号的时候，比如一个是<strong>GitHub</strong>账号，用于自己进行一些开发活动；后来觉得GitHub访问起来太慢了，又注册了国内的码云<strong>gitee</strong>账号(或者来了一个<strong>gitlab</strong>账号，一般是公司内部用到的git)。我们在使用这几者时，就必然会涉及到一个问题：在<strong>绑定SSH密钥</strong>的过程中，生成第二个git的key的时候会<strong>覆盖</strong>第一个的key，导致必然其中有一个就用不了。</li></ul><p>解决方案：</p><ul><li><strong>多个ssh key管理</strong>：我们可以在.ssh文件目录下新建一个<strong>config</strong>文件配置一下，就可以解决问题</li></ul></blockquote><hr><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、原因分析："><a href="#一、原因分析：" class="headerlink" title="一、原因分析："></a>一、原因分析：</h2><p>注意：出现SSH密钥冲突问题的实质，其实就在于我们每次（尤其是第一次时）是否知道可以自定义密钥名</p><ul><li><p>很多人第一次生成密钥时，直接在命令行中：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;                   </span><br><span class="line">git config --global user.email &quot;用户邮箱&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;用户邮箱&quot;</span><br></pre></td></tr></table></figure></li><li><p>前两行是在设置用户名和邮箱，重点是上面第三行代码，即生成密钥的代码。如果就按这样写的话，那么密钥的文件名字就是默认的：</p></li><li><p>那么我们在第二个平台进行生成密钥（比如我们已经生成过GitHub的ssh密钥，再准备生成gitee的密钥时）：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/Kkkkkikkkk.png"></p></li><li><p>图中  <strong>Overwrite(y&#x2F;n)?</strong>  即在提示是否覆盖：选择y，就会覆盖导致之前的失效；选择n，即取消本次的覆盖，就不会创建新的密钥了</p></li></ul><h2 id="二、解决方案："><a href="#二、解决方案：" class="headerlink" title="二、解决方案："></a>二、解决方案：</h2><h3 id="1-查看ssh文件"><a href="#1-查看ssh文件" class="headerlink" title="1.查看ssh文件"></a>1.查看ssh文件</h3><ul><li><p><strong>在桌面 点击鼠标右键 （Git Bash here） 进入 .ssh 文件夹 如下图（注意空格）：</strong></p></li><li><p><strong>ls</strong>  命令检查是否存在 SSH Key</p></li></ul><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1680630823889.png"></p><p><strong>出现上图说明我们之前的确已经生成过SSH密钥了</strong></p><p><strong>注意：如果没有该文件夹，自己 C 盘的 用户路径下 新建 .ssh 文件夹</strong></p><h3 id="2-删除之前的-ssh"><a href="#2-删除之前的-ssh" class="headerlink" title="2.删除之前的.ssh"></a>2.删除之前的.ssh</h3><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1680631208821.png"></p><h3 id="3-分别生成gitee和github-的-SSH-Key"><a href="#3-分别生成gitee和github-的-SSH-Key" class="headerlink" title="3.分别生成gitee和github 的 SSH Key"></a>3.分别生成gitee和github 的 SSH Key</h3><ul><li><p><strong>（1）生成github的密钥，自定义其名称</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxxxxxx@qq.com&quot; -f &quot;id_rsa_github&quot;</span><br></pre></td></tr></table></figure></li><li><p><strong>（2）配置github的SSH key</strong></p><p>输入自己的邮箱后一直回车，即可出现以下画面</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1680631744244.png"></p></li><li><p><strong>（3）查看SSH Key</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa_github.pub     // 这里是查看 github的 SSH Key</span><br></pre></td></tr></table></figure><p>出现下图：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1680632284727.png"></p></li><li><p><strong>（4）拷贝 ssh-rsa 开头的 ssh key，然后到github上添加ssh key</strong></p></li><li><p><strong>（5）配置gitee的 ssh key</strong></p></li></ul><p>  操作和上面的类似，只是把命令换成了</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxxxxxx@qq.com&quot; -f &quot;id_rsa_gitee&quot;     //生成gitee的SSH Key</span><br><span class="line">cat id_rsa_gitee.pub             //这里是查看gitee的SSHKey（这里注意和github区分一下)</span><br></pre></td></tr></table></figure><ul><li><strong>（6）然后把生成的 ssh key 复制到 gitee，进行添加 ssh key 操作，（操作类似上面的 github 添加 ssh）</strong></li></ul><h3 id="4-添加-config解决ssh冲突"><a href="#4-添加-config解决ssh冲突" class="headerlink" title="4.添加 config解决ssh冲突"></a>4.添加 config解决ssh冲突</h3><ul><li>在 .ssh 文件夹路径下 ，执行命令：vi config</li></ul><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1680632707009.png"></p><blockquote><p>在这里面一个一个输入比较慢，所以先退出，先按键盘的 Esc，输入“   :wq  ”，回车退出然后 C盘 的.shh 文件夹中 找到 并打开 config 文件，将下面的内容复制进 config 文件，保存即可</p></blockquote><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1680632728920.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># gitee</span><br><span class="line">Host gitee.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_gitee</span><br><span class="line"> </span><br><span class="line"># github</span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_github</span><br></pre></td></tr></table></figure><mark class="hl-label red">注意：上面这个是关键的一步，一定要新创建config文件来解决SSH冲突</mark> <h3 id="5-测试"><a href="#5-测试" class="headerlink" title="5.测试"></a>5.测试</h3><ul><li>执行<code>ssh -T git@github.com</code>,出现<code>successfully</code>,则github配置成功。</li><li>执行<code>ssh -T git@gitee.com</code>,出现<code>successfully</code>,则gitee配置成功。</li></ul><p><strong>注意</strong>：<br>可能会出现下面的内容 （直接输入 <strong>yes</strong> 即可最终出现<code>successfully</code>，配置成功）</p><blockquote><p>The authenticity of host ‘gitee.com (212.64.63.190)’ can’t be established.<br>ECDSA key fingerprint is SHA256:FQGC9Kn&#x2F;eye1W8icdBgrQp+KkGYoFgbVr17bmjey0Wc.<br>Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint]) </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建免费的个人图床</title>
      <link href="/2023/04/02/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2023/04/02/%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注意：本篇文章中<strong>PicGo+Vika</strong>搭建图床的方案目前<strong>暂时失效</strong>，详情可以查看我<strong>置顶的网站更新公告</strong>文章。</p><p>​现在，我已经采用<strong>PicGo+GitHub</strong>搭建图床的方案，具体的也可以参考<strong>更新公告中的内容</strong>。</p></blockquote><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><blockquote><p>平时将写完的博客部署到网上后，我们时常会发现文章里面的图片加载起来可能很慢，这与我们的图片访问路径在网站文件目录的本地有关。经过查找相关资料，我找到一个比较好的解决方案：即创建我们个人的图床。这时，我们将图片传到图库上后，文章里的图片就可以用链接的形式访问，再在网站中打开就会加载很快。</p></blockquote><hr><h2 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h2><p>利用PicGo+Vika &#x2F;&#x2F; PicGo+GitHub实现个人图床的搭建</p><blockquote><p>注意：</p><ol><li>PicGo在安装前，需要先安装<strong>node.js</strong>环境（可在本网站“<strong>资源</strong>”板块获取）；</li><li>下面关于PicGo的下载地址有两个，第二个为GitHub上的，受网络影响可能无法正常打开，推荐在<strong>第一个</strong>链接访问并下载；</li><li>PicGo的不同版本，可能<strong>兼容性</strong>和<strong>效果</strong>不同，博主安装的是<strong>V2.3.1</strong>版本</li></ol></blockquote><p>PicGo官方下载地址：</p><ul><li><a href="http://cpasion-docs.gitee.io/picgo-doc/">http://cpasion-docs.gitee.io/picgo-doc/</a>   （Gitee平台，推荐）</li><li><a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a>    （GitHub）</li></ul><p>vika官网：</p><ul><li><a href="https://vika.cn/">https://vika.cn/</a></li></ul><p>GitHub官网：</p><ul><li><a href="https://github.com/">https://github.com/</a></li></ul><hr><h2 id="操作："><a href="#操作：" class="headerlink" title="操作："></a>操作：</h2><p>这里，我推荐一个B站UP主<a href="https://space.bilibili.com/67268239"><strong>佳豪君z</strong></a>的视频：</p><iframe height=450 width=800 src="//player.bilibili.com/player.html?aid=430194435&bvid=BV18G411G7ah&cid=823655311&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><hr><h2 id="最后："><a href="#最后：" class="headerlink" title="最后："></a>最后：</h2><blockquote><p>受vika平台后续运营和更新影响，此种搭建图床的方法有可能会失效，不一定仍然适用，具体还请结合实际情况而定！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电路实验八</title>
      <link href="/2023/03/28/%E5%AE%9E%E9%AA%8C8/"/>
      <url>/2023/03/28/%E5%AE%9E%E9%AA%8C8/</url>
      
        <content type="html"><![CDATA[<h1 id="实验8-三相交流电路的研究"><a href="#实验8-三相交流电路的研究" class="headerlink" title="实验8 三相交流电路的研究"></a>实验8 三相交流电路的研究</h1><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230326_212227.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 电路实验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>电路实验七</title>
      <link href="/2023/03/20/%E5%AE%9E%E9%AA%8C7/"/>
      <url>/2023/03/20/%E5%AE%9E%E9%AA%8C7/</url>
      
        <content type="html"><![CDATA[<h1 id="实验7-RL串联电路及功率因素提高的研究"><a href="#实验7-RL串联电路及功率因素提高的研究" class="headerlink" title="实验7 RL串联电路及功率因素提高的研究"></a>实验7 RL串联电路及功率因素提高的研究</h1><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/IMG_20230316_193233.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 电路实验 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>入门搭建个人博客教程</title>
      <link href="/2023/03/16/%E6%96%B0%E6%89%8B%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
      <url>/2023/03/16/%E6%96%B0%E6%89%8B%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>欢迎阅读本篇教程！首先说明一点，本教程将适用于所有零基础的电脑小白。因此，在实际操作之前不必感到紧张。同时，由于一小部分操作需要调用命令行，那么遇到命令行或者终端上的报错，也是很正常的。这时不必害怕，放松心态，大不了把前面的命令重输一遍即可。如果还是无法解决，那就复制命令行中的错误提示，在万能的浏览器中搜索即可。总而言之，好事多磨，办法总比困难多！</p></blockquote><hr><p><strong>这里我推荐一个B站Up主  <a href="https://space.bilibili.com/255947051">火车啦啦</a>  的教学视频</strong>：你可以根据需要，先总的看一下视频做一个初步了解，然后再对照正文里的步骤进行详细操作。</p><iframe height=450 width=800 src="//player.bilibili.com/player.html?aid=969346513&bvid=BV1Np4y1i7r5&cid=228436099&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p><strong>（1）必要软件安装</strong>（点击名称即可跳转到各自官网）：</p><ul><li><p><a href="https://nodejs.cn/download/"><strong>node.js</strong></a>：用于安装后面的博客框架</p></li><li><p><a href="https://git-scm.com/"><strong>Git</strong></a>：用于后面将网站部署到Gitee或者GitHub上</p></li></ul><p><strong>（2）可选软件</strong>（以下软件只是用于后面配置文件更改以及博客写作，可根据需要安装）：</p><ul><li><p><a href="https://code.visualstudio.com/Download"><strong>Visual Studio Code</strong></a>：用来打开网站文件中的配置文件</p></li><li><p><a href="https://www.typora.io/"><strong>Typora</strong></a>：方便写博客文章</p></li></ul><blockquote><p>温馨提示：上述软件均为国外软件，可能受网络影响，无法打开其官方网站。我已经将其安装包，上传至网盘，可根据个人需要，点击本博客网站上面的“资源”板块寻找和下载。最后重申一下，尽量还是自己想办法获取到官方最新版。  </p></blockquote><br/><h2 id="二、检查工作"><a href="#二、检查工作" class="headerlink" title="二、检查工作"></a>二、检查工作</h2><p>我们怎么去查看上面的软件是否安装成功了呢？</p><h3 id="检验是否成功安装"><a href="#检验是否成功安装" class="headerlink" title="检验是否成功安装"></a>检验是否成功安装</h3><p>用 Win + R 打开运行，输入 cmd ，点击确定：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/1.png"></p><p>进入cmd控制台：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/3.png"></p><h3 id="依次输入下面的指令并回车：（注意输入空格）"><a href="#依次输入下面的指令并回车：（注意输入空格）" class="headerlink" title="依次输入下面的指令并回车：（注意输入空格）"></a><strong>依次输入下面的指令并回车：（注意输入空格）</strong></h3><h4 id="node-js-的检查"><a href="#node-js-的检查" class="headerlink" title="node.js 的检查"></a>node.js 的检查</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><h4 id="npm的检查"><a href="#npm的检查" class="headerlink" title="npm的检查"></a>npm的检查</h4><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><h4 id="Git-的检查"><a href="#Git-的检查" class="headerlink" title="Git 的检查"></a>Git 的检查</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/2.png"></p><p>以上有显示版本号，则说明安装成功</p><p>除此之外，我们也需要简单配置一下node.js，可以点击下方链接，<strong>只需要</strong>阅读文章“<strong>Step4：环境配置</strong>”部分，进行操作：</p><ul><li><p>node.js安装及环境配置超详细教程【Windows系统安装包方式】：</p><p><strong><a href="https://blog.csdn.net/weixin_44893902/article/details/121788104">https://blog.csdn.net/weixin_44893902/article/details/121788104</a></strong></p></li></ul><br/><h2 id="三、博客框架——Hexo的安装"><a href="#三、博客框架——Hexo的安装" class="headerlink" title="三、博客框架——Hexo的安装"></a>三、博客框架——Hexo的安装</h2><blockquote><p>注意（在下面的方式1和2中任选一个即可）：</p><p>方式1.你可以依然用 Win + R 打开运行，输入 cmd 并进入cmd窗口进行操作（这时，你操作完后面步骤后所生成的myblog文件夹会出现在<strong>默认位置</strong>，一般是<strong>C盘下的用户文件</strong>中，例如我的是C:\Users\Lee&gt;）</p><p>方式2.如果你想把博客文件创建在其他盘，比如D盘，那么只需要在<strong>D盘根目录下</strong>或者<strong>D盘的一个文件夹中</strong>打开cmd后，再进行下面的操作即可。可参考这篇文章：<a href="https://blog.csdn.net/weixin_44679832/article/details/123942274">https://blog.csdn.net/weixin_44679832/article/details/123942274</a></p></blockquote><p>下面操作均在cmd中输入指令完成：</p><h4 id="0-（可选项）推荐安装之前可以先设置一下淘宝镜像加速器"><a href="#0-（可选项）推荐安装之前可以先设置一下淘宝镜像加速器" class="headerlink" title="0.（可选项）推荐安装之前可以先设置一下淘宝镜像加速器"></a>0.（可选项）推荐安装之前可以先设置一下淘宝镜像加速器</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h4 id="1-全局安装框架"><a href="#1-全局安装框架" class="headerlink" title="1.全局安装框架"></a>1.全局安装框架</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h4 id="2-1-创建你的博客目录"><a href="#2-1-创建你的博客目录" class="headerlink" title="2-1.创建你的博客目录"></a>2-1.创建你的博客目录</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 你博客的文件夹名字   (比如：hexo init myblog)</span><br></pre></td></tr></table></figure><h4 id="2-2-进入你的博客文件"><a href="#2-2-进入你的博客文件" class="headerlink" title="2-2.进入你的博客文件"></a>2-2.进入你的博客文件</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 你博客的文件夹名字   (比如：<span class="built_in">cd</span> myblog)</span><br></pre></td></tr></table></figure><h4 id="3-复制文件到你博客的目录"><a href="#3-复制文件到你博客的目录" class="headerlink" title="3.复制文件到你博客的目录"></a>3.复制文件到你博客的目录</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="4-安装Hexo部署插件"><a href="#4-安装Hexo部署插件" class="headerlink" title="4.安装Hexo部署插件"></a>4.安装Hexo部署插件</h4><p>（此步骤用于安装本地部署插件，如果遗漏会造成后面 <strong>hexo deploy出错</strong>）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><br/><h2 id="四、注册Gitee（推荐）或者GitHub账号"><a href="#四、注册Gitee（推荐）或者GitHub账号" class="headerlink" title="四、注册Gitee（推荐）或者GitHub账号"></a>四、注册Gitee（推荐）或者GitHub账号</h2><blockquote><p>点击下面网站名称，即可跳转到对应官网</p></blockquote><p><a href="https://gitee.com/"><strong>Gitee</strong></a>（码云）：简单地说，这是一个国内的代码托管网站，而我们将本地的博客网页文件部署上传到Gitee后，此时Gitee就相当于服务器的功能，继而就可以实现把博客网站发送到网络上，让别人也可以访问。</p><p><a href="https://github.com/"><strong>GitHub</strong></a>：简单的说，你可以理解为国外的代码托管网站，由于网络波动或者限制，本次搭建博客并不推荐。但是对于想在技术上继续研究和学习的同学来讲，强烈建议了解和入手！</p><h3 id="可以观看下面视频对应部分进行操作："><a href="#可以观看下面视频对应部分进行操作：" class="headerlink" title="可以观看下面视频对应部分进行操作："></a><strong>可以观看下面视频对应部分进行操作：</strong></h3><ul><li><strong>使用Gitee的小伙伴（重点观看注册和pages服务部分）：</strong></li></ul><p>【使用Hexo和码云Gitee免费搭建个人博客保姆级建站教程】 <a href="https://www.bilibili.com/video/BV1Np4y1i7r5/?share_source=copy_web&vd_source=d67e16cc6c93f4efcf3a7a037720b2af">https://www.bilibili.com/video/BV1Np4y1i7r5/?share_source=copy_web&amp;vd_source=d67e16cc6c93f4efcf3a7a037720b2af</a></p><ul><li><strong>使用GitHub的小伙伴（只需要看前面部分）：</strong></li></ul><p>【hexo搭建个人博客超简单效果超好的个人网站博客搭建对小白很友好】 <a href="https://www.bilibili.com/video/BV1Rt4y1k7it/?p=2&share_source=copy_web&vd_source=d67e16cc6c93f4efcf3a7a037720b2af">https://www.bilibili.com/video/BV1Rt4y1k7it/?p=2&amp;share_source=copy_web&amp;vd_source=d67e16cc6c93f4efcf3a7a037720b2af</a></p><h3 id="你需要完成好以下工作："><a href="#你需要完成好以下工作：" class="headerlink" title="你需要完成好以下工作："></a>你需要完成好以下工作：</h3><p><strong>1.注册账号</strong></p><p><strong>2.创建仓库并设置（视频里有注意事项）</strong></p><p>3.实名认证，打开Git Pages服务（使用Gitee的需要）</p><br/><h2 id="五、Git的配置"><a href="#五、Git的配置" class="headerlink" title="五、Git的配置"></a>五、Git的配置</h2><p>用 Win + R 打开运行，输入 cmd 并进入cmd</p><h3 id="设置用户名称"><a href="#设置用户名称" class="headerlink" title="设置用户名称"></a>设置用户名称</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br></pre></td></tr></table></figure><h3 id="设置用户邮箱"><a href="#设置用户邮箱" class="headerlink" title="设置用户邮箱"></a>设置用户邮箱</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;用户邮箱&quot;</span><br></pre></td></tr></table></figure><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;用户邮箱&quot;</span><br></pre></td></tr></table></figure><p>以上代码执行之后，会让你设置密码，推荐一个都不要设置，直接连按三次回车键。  </p><p>然后，按照视频中的步骤，将本地生成的ssh密钥填写到gitee或者github平台上对应的位置。</p><br/><h2 id="六、博客-config-yml-文件的配置"><a href="#六、博客-config-yml-文件的配置" class="headerlink" title="六、博客 _config.yml 文件的配置"></a>六、博客 _config.yml 文件的配置</h2><p>打开你博客根目录的 _config.yml 文件，将一下信息添加到里面去。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://gitee.com/xxxx/xxxx.git</span>    <span class="comment">#替换成你自己仓库的HTTP URL地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>【注意区分】你博客根目录的 _config.yml 文件，和主题根目录的 _config.yml 文件！ </p><br/><h2 id="七、生成博客网页，并部署到Gitee上"><a href="#七、生成博客网页，并部署到Gitee上" class="headerlink" title="七、生成博客网页，并部署到Gitee上"></a>七、生成博客网页，并部署到Gitee上</h2><p>在你的博客文件的根目录下打开cmd控制台</p><h3 id="1、清理缓存"><a href="#1、清理缓存" class="headerlink" title="1、清理缓存"></a>1、清理缓存</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><p>hexo cl 是 hexo clean 的简写</p><h3 id="2、生成静态页面"><a href="#2、生成静态页面" class="headerlink" title="2、生成静态页面"></a>2、生成静态页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>hexo g 是 hexo generate 的简写</p><h3 id="3、在本地映射（预览）"><a href="#3、在本地映射（预览）" class="headerlink" title="3、在本地映射（预览）"></a>3、在本地映射（预览）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>hexo s 是 hexo server 的简写</p><p>可以在浏览器中访问此时命令行中出现的链接，即可预览生成的博客页面：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/20230430212948.png"></p><h3 id="4、部署推送"><a href="#4、部署推送" class="headerlink" title="4、部署推送"></a>4、部署推送</h3><blockquote><ul><li><p>上面生成的博客页面确认无误后，在命令行中按CTRL+C结束本地预览，接着可执行下一步</p></li><li><p>第一次部署推送过程中，会弹出Gitee登陆提示，填写好你的账号和密码即可</p></li></ul><p>（如果你采用的是github部署，最好先挂上一个加速器，再执行下面的部署命令。如此，就可以稳定地在浏览器中，选择登陆和验证你的github账号）</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>hexo d 是 hexo deploy 的简写</p><p>部署成功如下图所示：</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/hexodeploytupian.png"></p><p>此时，你当初为博客创建的Gitee仓库中就会更新</p><p><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/giteeekkkkkk.png"></p><p>按照视频的教程，启用Gitee Pages服务，完成配置和更新，继而就可以通过Gitee为你分配的链接访问你的博客了</p><mark class="hl-label blue">至此，恭喜你，我们的博客网站基本搭建完毕了！</mark>   <h3 id="5、温馨提示："><a href="#5、温馨提示：" class="headerlink" title="5、温馨提示："></a>5、温馨提示：</h3><blockquote><p>以上连写示例一（清理缓存 + 生成静态页面 + 在本地预览）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>以上连写示例二（清理缓存 + 生成静态页面 + 部署推送）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></blockquote><br/><h2 id="八、（进阶）自定义博客主题推荐与配置"><a href="#八、（进阶）自定义博客主题推荐与配置" class="headerlink" title="八、（进阶）自定义博客主题推荐与配置"></a>八、（进阶）自定义博客主题推荐与配置</h2><h3 id="主题一：Butterfly"><a href="#主题一：Butterfly" class="headerlink" title="主题一：Butterfly"></a><strong>主题一：Butterfly</strong></h3><p>这里我推荐一下我所使用的主题：<a href="https://butterfly.js.org/"><strong>Butterfly</strong> - A Simple and Card UI Design theme for Hexo</a>（点击即可访问）</p><p>你可以滑动一下主页后，在右下角出现的齿轮按钮中，调整成简体中文模式</p><p>然后再仔细阅读其网页中”文档“板块，进行设置，DIY出属于你的独一无二博客网站啦！</p><p>主题示例：<br><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/RV%7B39%603K404GY%60G~IQ%7BOKUK.png"></p><h3 id="主题二：Matery"><a href="#主题二：Matery" class="headerlink" title="主题二：Matery"></a><strong>主题二：Matery</strong></h3><p>参考网站：<a href="https://www.lixl.cn/2019/092856736.html">https://www.lixl.cn/2019/092856736.html</a></p><p>主题示例：<br><img src="https://cdn.staticaly.com/gh/HappyLeeCode/IMG@main/img/ghffsAA.png"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
